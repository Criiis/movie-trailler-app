{"version":3,"sources":["components/Video.js","styles/variables.js","components/Row.js","module/mainFetchURL.js","module/request.js","components/Hero.js","module/useFetchURL.js","App.js","reportWebVitals.js","index.js"],"names":["Video","url","title","src","frameBorder","allow","allowFullScreen","styleVariables","color","primaryColor","primaryColorHover","secondaryColor","secondaryColorHover","listItemColor","scrollBarColor","padding","containerPadding","verticalPadding","mediaQueries","maxMobile","RowContainer","styled","div","Row","cat","fetchData","status","pageStatus","useState","trailerUrl","setTrailerUrl","errorTrailer","setErrorTrailer","movieRef","useRef","rowRef","useEffect","urlParams","URLSearchParams","window","location","search","getCat","get","getid","String","rowRefContent","current","movieDiv","querySelector","movieName","alt","movieTrailer","id","then","catch","scrollTo","left","offsetLeft","behavior","ref","className","map","movie","to","name","original_title","onClick","findID","offsetTop","top","error","handleMovieClick","poster_path","backdrop_path","instance","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","fetchMoviesTrending","HeroContainer","MainMovieTrailer","Hero","setmovie","movieTrailerURL","setMovieTrailerURL","errorMovieTrailerURL","seterrorMovieTrailerURL","a","fetch","mainURL","data","json","request","undefined","requestChecker","results","Math","floor","random","length","handleEsc","event","keyCode","addEventListener","removeEventListener","style","backgroundImage","backgroundRepeat","backgroundSize","original_name","handleHeroTrailer","overview","callBack","call","result","console","log","App","netflixOriginals","setNetflixOriginals","trending","setTrending","topRated","setTopRated","romanceMovies","setRomanceMovies","moviesTrending","setMoviesTrending","horrorMovies","setHorrorMovies","documentaries","setDocumentaries","comedyMovies","setComedyMovies","actionMovies","setActionMovies","setStatus","setPageStatus","onload","getPramCat","findCat","document","getElementById","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.42fb13ea.chunk.js","sourcesContent":["function Video({url}) {\r\n    return (\r\n        <>\r\n         <iframe title={url} src={`https://www.youtube.com/embed/${url}?autoplay=1&rel=0`} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen/>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Video","const size = {\r\n    maxMobile: '768px',\r\n    laptop: '1024px',\r\n    laptopL: '1440px',\r\n    desktop: '2560px'\r\n}\r\n\r\nconst styleVariables = {\r\n    color: {\r\n        primaryColor: '#1DB954',\r\n        primaryColorHover: '#4bdf80',\r\n        secondaryColor: 'white',\r\n        secondaryColorHover: 'black',\r\n        listItemColor: '#eee9',\r\n        scrollBarColor: '#555',\r\n    },\r\n    padding: {\r\n        containerPadding: '0 20px',\r\n        verticalPadding: '15px 0',\r\n    },\r\n    mediaQueries: {\r\n        maxMobile: `(min-width: ${size.maxMobile})`,\r\n    },\r\n}\r\nexport default styleVariables","import React, { useState, useRef, useEffect} from 'react'\r\nimport {BrowserRouter, Link} from 'react-router-dom'\r\nimport movieTrailer from 'movie-trailer'\r\nimport TrailerVideo from './Video.js'\r\nimport styled from 'styled-components'\r\nimport styleVariables from '../styles/variables'\r\n\r\n\r\nconst RowContainer = styled.div`\r\n    width: 100%;\r\n    padding: ${styleVariables.padding.containerPadding};\r\n    .movieImage {\r\n        display: flex;\r\n        overflow-x: scroll;\r\n        padding: ${styleVariables.padding.verticalPadding};\r\n        min-height: 200px;\r\n\r\n        &::-webkit-scrollbar{\r\n            height: 10px;\r\n            width: 10px;\r\n            background: transparent;\r\n        }\r\n        &::-webkit-scrollbar-thumb:horizontal{\r\n            background: transparent;\r\n            border-top-left-radius: 10px;\r\n            border-top-right-radius: 10px;\r\n            border-bottom-right-radius: 10px;\r\n            border-bottom-left-radius: 10px;\r\n        }\r\n        &:hover {\r\n            &::-webkit-scrollbar-thumb:horizontal{\r\n                background: white;\r\n            }\r\n        }\r\n        img {\r\n            width: 200px;\r\n            padding: 5px;\r\n            transition: transform 0.2s  ;\r\n            &:hover {\r\n                transform: scale(1.05);\r\n            }\r\n        }\r\n    }\r\n    .trailerContainer {\r\n        width: 100%;\r\n\r\n        iframe {\r\n            width: 100%;\r\n            height: 400px;\r\n        }\r\n    }\r\n    .error {\r\n        text-align: center;\r\n        text-transform: uppercase;\r\n        font-weight: bold;\r\n    }\r\n`\r\n\r\nexport default function Row({title, cat, fetchData, status, pageStatus}) {\r\n    const base_URL = 'https://image.tmdb.org/t/p/w200/'\r\n    const [trailerUrl, setTrailerUrl] = useState('')\r\n    const [errorTrailer, setErrorTrailer] = useState('')\r\n    //useRef to know the \"this\" of the object i clicked\r\n    const movieRef = useRef(null);\r\n    const rowRef = useRef(null);\r\n\r\n    const handleMovieClick = (movie) => {\r\n        let movieID;\r\n\r\n        let findID = movieRef.current.offsetTop;\r\n        window.scrollTo({ top: findID, behavior: 'smooth'})\r\n\r\n        movieTrailer( movie.name == null ? movie.original_title : movie.name, {id: true} )\r\n        .then( url => {\r\n            setTrailerUrl(url)\r\n            setErrorTrailer('')\r\n            movieID = url;\r\n            //set Trailer URL empty if you click in the same movie \r\n            if(trailerUrl === movieID) {\r\n                setTrailerUrl('')\r\n            }\r\n        })\r\n        //set Trailer URL empty to close the window when it does not found any video\r\n        .catch( error => {\r\n            setTrailerUrl('')\r\n            setErrorTrailer(`unfortunately the trailer for ${movie.name == null ? movie.original_title : movie.name} is not avaliable`)\r\n        })\r\n    }\r\n\r\n\r\n    //this useEffect will be the one to search for the correct movie when the page loads\r\n    useEffect(() => {\r\n        const urlParams = new URLSearchParams(window.location.search)\r\n        const getCat = urlParams.get('cat')\r\n        const getid = String(urlParams.get('id'))\r\n\r\n        if(cat === getCat) {\r\n            if(status === true && pageStatus === true) {\r\n                let rowRefContent = rowRef.current\r\n                let movieDiv= rowRefContent.querySelector(`#${getid}`)\r\n\r\n                if(movieDiv !== null) {\r\n                    let movieName = movieDiv.alt\r\n                    movieTrailer( movieName, {id: true} )\r\n                    .then( url => {\r\n                        setTrailerUrl(url)\r\n                    })\r\n                    .catch( () => {\r\n                        setTrailerUrl('')\r\n                        setErrorTrailer(`unfortunately the trailer for ${movieName} is not avaliable`)\r\n                    })\r\n                }\r\n\r\n                let insideContainerRow = rowRefContent.querySelector('.movieImage')\r\n                insideContainerRow.scrollTo({\r\n                    left: movieDiv.offsetLeft - 25,\r\n                    behavior: 'smooth'\r\n                })\r\n\r\n            }\r\n        }\r\n\r\n    }, [cat, status, pageStatus])\r\n\r\n\r\n    return (\r\n    <RowContainer id={cat} ref={rowRef}>\r\n        <h2>{title}</h2>\r\n        <div className=\"movieImage\">\r\n\r\n        {fetchData.map( movie => (\r\n            <BrowserRouter key={`${movie.id}10`}>\r\n                <Link to={`?cat=${cat}&id=mov_${movie.id}&name=${movie.name == null ? movie.original_title : movie.name}`} onClick={ () => {\r\n                    handleMovieClick(movie)\r\n                }}>\r\n                    <img\r\n                        ref={movieRef}\r\n                        id={`mov_${movie.id}`}\r\n                        key={movie.id}\r\n                        src={`${base_URL}${ movie.poster_path === null ? movie.backdrop_path : movie.poster_path }`}\r\n                        alt={movie.name == null ? movie.original_title : movie.name}\r\n                    />\r\n                </Link>\r\n            </BrowserRouter>\r\n            ))}\r\n\r\n            </div>\r\n            <div>\r\n            <div className=\"trailerContainer\">\r\n                {errorTrailer && <p className=\"error\">{errorTrailer}</p>}\r\n                {trailerUrl && <TrailerVideo url={trailerUrl}/>}\r\n            </div>\r\n        </div>\r\n    </RowContainer>\r\n    )\r\n}","const instance = \"https://api.themoviedb.org/3\"\r\n\r\nexport default instance;\r\n\r\n","// api URL requests \r\nconst API_KEY = \"d5f97f79b5eba255553c61fd70da79bb\";\r\n\r\nconst requests = {\r\n    fetchTrending:  `/trending/all/week?api_key=${API_KEY}&language=en-UK`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-UK`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    fetchMoviesTrending: `/trending/movie/day?api_key=${API_KEY}&language=en-UK`,\r\n}\r\n\r\nexport default requests;","import React, {useState, useEffect} from 'react'\r\nimport mainURL from '../module/mainFetchURL'\r\nimport requests from '../module/request'\r\nimport { AiFillCaretRight } from 'react-icons/ai';\r\nimport movieTrailer from 'movie-trailer'\r\nimport TrailerVideo from './Video.js'\r\nimport styled from 'styled-components'\r\nimport styleVariables from '../styles/variables'\r\n\r\nconst HeroContainer = styled.div`\r\n    min-height: 90vh;\r\n    position: relative;\r\n    background-position: center;\r\n    @media ${styleVariables.mediaQueries.maxMobile} {\r\n        background-position: right bottom;\r\n    }\r\n    &:after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background: linear-gradient(0deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.68531162464986) 30%, rgba(0,0,0,0) 55%, rgba(0,0,0,0) 100%);\r\n        z-index: 1;\r\n    }\r\n    &:before {\r\n        content: '';\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 1;\r\n        background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.68531162464986) 15%, rgba(0,0,0,0) 30%, rgba(0,0,0,0) 100%);\r\n        @media ${styleVariables.mediaQueries.maxMobile} {\r\n            background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,0.68531162464986) 20%, rgba(0,0,0,0) 45%, rgba(0,0,0,0) 100%);\r\n        }\r\n    }\r\n    .container {\r\n        width: 100%;\r\n        padding: ${styleVariables.padding.containerPadding};\r\n        max-width: 370px;\r\n        position: absolute;\r\n        bottom: 15%;\r\n        left: 0px;\r\n        z-index: 2;\r\n        @media ${styleVariables.mediaQueries.maxMobile} {\r\n            max-width: 400px;\r\n            top: 50%;\r\n            bottom: auto;\r\n            left: 100px;\r\n            transform: translateX(0%) translateY(-50%);\r\n        }\r\n        p {\r\n            &.error {\r\n                font-weight: bold;\r\n                text-transform: uppercase;\r\n            }\r\n        }\r\n        h1 {\r\n            margin-top: 0;\r\n            font-size: 40px;\r\n            margin-bottom: 15px;\r\n            @media ${styleVariables.mediaQueries.maxMobile} {\r\n                margin-bottom: 20px;\r\n                font-size: 65px;\r\n            }\r\n        }\r\n    }\r\n`\r\nconst MainMovieTrailer = styled.div`\r\n    position: fixed;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: rgba(0,0,0,0.7);\r\n    z-index: 99;\r\n    div {\r\n        width: 90%;\r\n        padding-top: 50.86%;\r\n        position: relative;\r\n        iframe {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            right: 0;\r\n            bottom: 0;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n`\r\n\r\nexport default function Hero() {\r\n    const [movie, setmovie] = useState([]);\r\n    const base_URL = 'https://image.tmdb.org/t/p/original';\r\n    const [movieTrailerURL, setMovieTrailerURL] = useState('');\r\n    const [errorMovieTrailerURL, seterrorMovieTrailerURL] = useState('');\r\n    \r\n\r\n    //function to fetch one movie from the list of movies\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const data = await fetch(\r\n                `${mainURL}${requests.fetchMoviesTrending}`\r\n            )\r\n            const request =await data.json();\r\n            let requestChecker = request.results[Math.floor(Math.random()* request.results.length - 1)]\r\n\r\n            //if for some reason this request returns undifined this ifstatment will run and callback with the 1st movie of the array!\r\n            if(requestChecker === undefined){\r\n                requestChecker = request.results[0]\r\n            }\r\n            setmovie (\r\n                requestChecker\r\n            )\r\n        }\r\n        fetchData();\r\n    }, [])\r\n\r\n    //movie trailer to get the trailer for the movie\r\n    const handleHeroTrailer = (movie) => {\r\n        movieTrailer( movie?.name || movie?.title || movie?.original_name, {id: true} )\r\n        .then( id => {\r\n            setMovieTrailerURL( id )\r\n            seterrorMovieTrailerURL('')\r\n        })\r\n        .catch( () => {\r\n            seterrorMovieTrailerURL('error')\r\n            setMovieTrailerURL('')\r\n        })\r\n    }\r\n\r\n    //function to close movie \r\n    const closeHeroTrailer = () => {\r\n        setMovieTrailerURL('')\r\n    }\r\n\r\n    //when press esc key close movie trailer\r\n    useEffect(() => {\r\n        const handleEsc = (event) => {\r\n            if (event.keyCode === 27) {\r\n                setMovieTrailerURL('')\r\n            }\r\n        };\r\n        window.addEventListener('keydown', handleEsc);\r\n    \r\n        return () => {\r\n            window.removeEventListener('keydown', handleEsc);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <HeroContainer style={{\r\n                backgroundImage: `url(\"${base_URL}${movie?.backdrop_path}\")`,\r\n                backgroundRepeat:\"no-repeat\",\r\n                backgroundSize:\"cover\"\r\n                }}>\r\n                <div className=\"container\">\r\n                    {/* this \"?\" is an Optional Chaining  */}\r\n                    <h1>{movie?.name || movie?.title || movie?.original_name}</h1>\r\n                    <button onClick={ () => handleHeroTrailer(movie)}><AiFillCaretRight/> Play Trailer</button>\r\n                    {errorMovieTrailerURL && <p className=\"error\">unfortunately the Trailer is not avaliable</p>}\r\n                    <p>{movie?.overview}</p>\r\n                </div>\r\n            </HeroContainer>\r\n            {movieTrailerURL &&\r\n            <MainMovieTrailer onClick={() => closeHeroTrailer()}>\r\n                <div>\r\n                <TrailerVideo url={movieTrailerURL}/>\r\n                </div>\r\n            </MainMovieTrailer>\r\n            }\r\n        </>\r\n    )\r\n\r\n}\r\n","import mainURL from './mainFetchURL'\r\n\r\nasync function fetchData(url, callBack) {\r\n    try {\r\n      const call = await fetch(`${mainURL}${url}`)\r\n      const data = await call.json()\r\n      const result = data.results\r\n      callBack(result);\r\n    } catch (error) {\r\n      console.log('something went wrong!');\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  export default fetchData","import React, { useState, useEffect } from \"react\"\r\nimport Row from \"./components/Row\"\r\nimport Hero from \"./components/Hero\"\r\nimport requests from \"./module/request\"\r\nimport fetchData from \"./module/useFetchURL\"\r\nimport \"./styles/_base/base.scss\"\r\n\r\nfunction App() {\r\n  const [netflixOriginals, setNetflixOriginals] = useState([]);\r\n  const [trending, setTrending] = useState([]);\r\n  const [topRated, setTopRated] = useState([]);\r\n  const [romanceMovies, setRomanceMovies] = useState([]);\r\n  const [moviesTrending, setMoviesTrending] = useState([]);\r\n  const [horrorMovies, setHorrorMovies] = useState([]);\r\n  const [documentaries, setDocumentaries] = useState([]);\r\n  const [comedyMovies, setComedyMovies] = useState([]);\r\n  const [actionMovies, setActionMovies] = useState([]);\r\n  const [status, setStatus] = useState(false);\r\n  const [pageStatus, setPageStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchData(`${requests.fetchNetflixOriginals}`, setNetflixOriginals)\r\n    fetchData(`${requests.fetchActionMovies}`, setActionMovies)\r\n    fetchData(`${requests.fetchComedyMovies}`, setComedyMovies)\r\n    fetchData(`${requests.fetchDocumentaries}`, setDocumentaries)\r\n    fetchData(`${requests.fetchHorrorMovies}`, setHorrorMovies)\r\n    fetchData(`${requests.fetchMoviesTrending}`, setMoviesTrending)\r\n    fetchData(`${requests.fetchRomanceMovies}`, setRomanceMovies)\r\n    fetchData(`${requests.fetchTopRated}`, setTopRated)\r\n    fetchData(`${requests.fetchTrending}`, setTrending)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(netflixOriginals.length && trending.length && topRated.length && romanceMovies.length && moviesTrending.length && horrorMovies.length && documentaries.length && comedyMovies.length && actionMovies.length !== 0) {\r\n      setStatus(true)\r\n    }\r\n    window.onload = () => {\r\n      setPageStatus(true)\r\n    }\r\n\r\n    if(status === true && pageStatus === true) {\r\n      const urlParams = new URLSearchParams(window.location.search);\r\n      const getPramCat = urlParams.get('cat');\r\n      if(getPramCat !== null) {\r\n        let findCat = document.getElementById(getPramCat).offsetTop\r\n        window.scrollTo({ top: findCat, behavior: 'smooth'});\r\n      }\r\n    }\r\n\r\n}, [netflixOriginals, trending, topRated, romanceMovies, moviesTrending, horrorMovies, documentaries, comedyMovies, actionMovies, status, pageStatus])\r\n\r\n\r\nreturn (\r\n    <div className=\"App\">\r\n      <Hero />\r\n      {netflixOriginals && <Row title=\"NETFLIX ORIGINALS\" fetchData={netflixOriginals} cat=\"netflix_originals\" status={status} pageStatus={pageStatus}/>}\r\n      {moviesTrending && <Row title=\"MOVIES TRENDING\" fetchData={moviesTrending} cat=\"movies_trending\" status={status} pageStatus={pageStatus}/>}\r\n      {topRated && <Row title=\"TOP RATED\" fetchData={topRated} cat=\"top_rated\" status={status} pageStatus={pageStatus}/>}\r\n      {actionMovies && <Row title=\"ACTION MOVIES\" fetchData={actionMovies}  cat=\"action_movies\"  status={status} pageStatus={pageStatus}/>}\r\n      {romanceMovies && <Row title=\"ROMANCE MOVIES\" fetchData={romanceMovies} cat=\"romance_movies\" status={status} pageStatus={pageStatus}/>}\r\n      {trending && <Row title=\"TRENDING NOW\" fetchData={trending} cat=\"trending\" status={status} pageStatus={pageStatus}/>}\r\n      {comedyMovies && <Row title=\"COMEDY MOVIES\" fetchData={comedyMovies} cat=\"comedy_movies\" status={status} pageStatus={pageStatus}/>}\r\n      {horrorMovies && <Row title=\"HORROR MOVIES\" fetchData={horrorMovies} cat=\"horror_movies\" status={status} pageStatus={pageStatus}/>}\r\n      {documentaries && <Row title=\"DOCUMENTARIES\" fetchData={documentaries} cat=\"documentaries\" status={status} pageStatus={pageStatus}/>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}